"use strict";
var SingletonFilterService = (function () {
    function SingletonFilterService() {
        this.tags = {
            category: [],
            department: [],
            industry: [],
            language: []
        };
        this.checkAll = {
            industry: false,
            category: false,
            department: false,
            language: false
        };
        this.data = [];
        this.tempAllTag = [];
        this.tempDepartment = [];
        this.tempIndustry = [];
        this.tempLanguage = [];
        this.tempCategory = [];
        if (!SingletonFilterService.isCreating) {
            throw new Error("You can't call new in Singleton instances!");
        }
    }
    SingletonFilterService.getInstance = function () {
        if (SingletonFilterService.instance == null) {
            SingletonFilterService.isCreating = true;
            SingletonFilterService.instance = new SingletonFilterService();
            SingletonFilterService.isCreating = false;
        }
        return SingletonFilterService.instance;
    };
    SingletonFilterService.prototype.resetData = function () {
        this.data = [];
        this.tempAllTag = [];
        this.tempDepartment = [];
        this.tempIndustry = [];
        this.tempLanguage = [];
        this.tempCategory = [];
        return 'success reset data';
    };
    SingletonFilterService.prototype.setFilter = function (value, type, checked) {
        this.type = type;
        this.id = value;
        if (checked) {
            switch (type) {
                case 'department':
                    this.tempDepartment.push(value);
                    break;
                case 'industry':
                    this.tempIndustry.push(value);
                    break;
                case 'language':
                    this.tempLanguage.push(value);
                    break;
                case 'category':
                    this.tempCategory.push(value);
                    break;
            }
            return 'success set filter data';
        }
        if (!checked) {
            switch (type) {
                case 'department':
                    var department = this.tempDepartment.indexOf(value);
                    this.tempDepartment.splice(department, 1);
                    break;
                case 'industry':
                    var industry = this.tempIndustry.indexOf(value);
                    this.tempIndustry.splice(industry, 1);
                    break;
                case 'language':
                    var language = this.tempLanguage.indexOf(value);
                    this.tempLanguage.splice(language, 1);
                    break;
                case 'category':
                    var category = this.tempCategory.indexOf(value);
                    this.tempCategory.splice(category, 1);
                    break;
            }
            return 'success set filter data';
        }
        return 'reject';
    };
    SingletonFilterService.prototype.setAllData = function () {
        this.tempAllTag = [];
        if (this.type == 'category') {
            this.tempAllTag.push({ 'filter_by': 'category', 'value': this.id }, { 'type': 'department', 'value': this.tempDepartment }, { 'type': 'industry', 'value': this.tempIndustry }, { 'type': 'language', 'value': this.tempLanguage });
            this.data = this.tempAllTag;
            return 'all success';
        }
        else {
            this.tempAllTag.push({ 'filter_by': 'all', 'value': '' }, { 'type': 'department', 'value': this.tempDepartment }, { 'type': 'industry', 'value': this.tempIndustry }, { 'type': 'language', 'value': this.tempLanguage }, {
                'type': 'category', 'value': this.tempCategory
            });
            this.data = this.tempAllTag;
            return 'all success';
        }
    };
    SingletonFilterService.prototype.onCheckAllTag = function (type, event) {
        var _this = this;
        switch (type) {
            case 'department':
                this.tempDepartment = [];
                event.currentTarget.checked == true ? this.checkAll.department = true : this.checkAll.department = false;
                this.tags.department.forEach(function (tag) {
                    _this.setFilter(tag.dbid, tag.type, event);
                });
                break;
            case 'industry':
                this.tempIndustry = [];
                event.currentTarget.checked == true ? this.checkAll.industry = true : this.checkAll.industry = false;
                this.tags.industry.forEach(function (tag) {
                    _this.setFilter(tag.dbid, tag.type, event);
                });
                break;
            case 'language':
                this.tempLanguage = [];
                event.currentTarget.checked == true ? this.checkAll.language = true : this.checkAll.language = false;
                this.tags.language.forEach(function (tag) {
                    _this.setFilter(tag.dbid, tag.type, event);
                });
                break;
            case 'category':
                this.tempCategory = [];
                event.currentTarget.checked == true ? this.checkAll.category = true : this.checkAll.category = false;
                this.tags.category.forEach(function (tag) {
                    _this.setFilter(tag.dbid, tag.type, event);
                });
                break;
        }
        return 'success';
    };
    SingletonFilterService.prototype.getTags = function (type) {
    };
    SingletonFilterService.prototype.getData = function () {
        return this.data;
    };
    SingletonFilterService.prototype.getCheckAllType = function (type) {
        switch (type) {
            case 'department':
                return this.checkAll.department;
            case 'industry':
                return this.checkAll.industry;
            case 'language':
                return this.checkAll.language;
            case 'category':
                return this.checkAll.category;
        }
    };
    SingletonFilterService.isCreating = false;
    return SingletonFilterService;
}());
exports.SingletonFilterService = SingletonFilterService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
