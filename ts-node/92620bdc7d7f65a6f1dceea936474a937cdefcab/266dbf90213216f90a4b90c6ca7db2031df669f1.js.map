{"version":3,"file":"/Users/tittaya/Desktop/trabila-new-template/tools/config/project.config.ts","sources":["/Users/tittaya/Desktop/trabila-new-template/tools/config/project.config.ts"],"names":[],"mappings":";;;;;;AAAA,qBAAqB,MAAM,CAAC,CAAA;AAE5B,4BAA2B,eAAe,CAAC,CAAA;AAM3C;IAAmC,iCAAU;IAO3C;QACE,iBAAO,CAAC;QANV,sBAAiB,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAE5E,eAAU,GAAM,IAAI,CAAC,eAAe,WAAQ,CAAC;QAC7C,cAAS,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAKjD,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAM,IAAI,CAAC,QAAQ,iCAA8B,CAAC;QACjG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,gBAAgB,EAAG,IAAI,EAAC,CAAC;QAItG,IAAI,CAAC,gBAAgB,GAChB,IAAI,CAAC,gBAAgB;YACxB,EAAC,GAAG,EAAE,2BAA2B,EAAE,MAAM,EAAE,MAAM,EAAC;YAClD,EAAC,GAAG,EAAE,mCAAmC,EAAE,MAAM,EAAE,IAAI,EAAE;YACzD,EAAC,GAAG,EAAE,0CAA0C,EAAE,MAAM,EAAE,IAAI,EAAE;YAChE,EAAC,GAAG,EAAE,oCAAoC,EAAE,MAAM,EAAE,MAAM,EAAC;YAC3D,EAAC,GAAG,EAAE,sCAAsC,EAAE,MAAM,EAAE,IAAI,EAAC;YAC3D,EAAC,GAAG,EAAE,4CAA4C,EAAE,MAAM,EAAE,MAAM,EAAE;YACpE,EAAC,GAAG,EAAE,uCAAuC,EAAE,MAAM,EAAE,IAAI,EAAE;YAC7D,EAAC,GAAG,EAAE,sBAAsB,EAAE,MAAM,EAAE,MAAM,EAAC;UAC9C,CAAC;QAGF,IAAI,CAAC,UAAU,GACV,IAAI,CAAC,UAAU,QAGnB,CAAC;IAIJ,CAAC;IAEH,oBAAC;AAAD,CAAC,AAvCD,CAAmC,wBAAU,GAuC5C;AAvCY,qBAAa,gBAuCzB,CAAA","sourcesContent":["import { join } from 'path';\n\nimport { SeedConfig } from './seed.config';\n\n/**\n * This class extends the basic seed configuration, allowing for project specific overrides. A few examples can be found\n * below.\n */\nexport class ProjectConfig extends SeedConfig {\n\n  PROJECT_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'project');\n\n  FONTS_DEST = `${this.APP_CLIENT_DEST}/fonts`;\n  FONTS_SRC = ['node_modules/font-awesome/fonts/**'];\n\n  constructor() {\n    super();\n\n    this.APP_TITLE = 'Trabila Directory';\n    this.SYSTEM_CONFIG_DEV.paths['ng2-imageupload'] = `${this.APP_BASE}node_modules/ng2-imageupload`;\n    this.SYSTEM_BUILDER_CONFIG.packages['ng2-imageupload'] = { main: 'index.js', defaultExtension : 'js'};\n\n\n    // Add `NPM` third-party libraries to be injected/bundled.\n    this.NPM_DEPENDENCIES = [\n      ...this.NPM_DEPENDENCIES,\n      {src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n      {src: 'primeng/resources/primeng.min.css', inject: true },\n      {src: 'primeng/resources/themes/delta/theme.css', inject: true },\n      {src: 'bootstrap/dist/js/bootstrap.min.js', inject: 'libs'},\n      {src: 'bootstrap/dist/css/bootstrap.min.css', inject: true},\n      {src: 'ng2-bootstrap/bundles/ng2-bootstrap.min.js', inject: 'libs' },\n      {src: 'font-awesome/css/font-awesome.min.css', inject: true },\n      {src: 'lodash/lodash.min.js', inject: 'libs'},\n    ];\n\n    // Add `local` third-party libraries to be injected/bundled.\n    this.APP_ASSETS = [\n      ...this.APP_ASSETS,\n      // {src: `${this.APP_CLIENT_SRC}/your-path-to-lib/libs/jquery-ui.js`, inject: true, vendor: false}\n      // {src: `${this.CSS_SRC}/path-to-lib/test-lib.css`, inject: true, vendor: false},\n    ];\n\n    /* Add to or override NPM module configurations: */\n    // this.mergeObject(this.PLUGIN_CONFIGS['browser-sync'], { ghostMode: false });\n  }\n\n}\n"]}