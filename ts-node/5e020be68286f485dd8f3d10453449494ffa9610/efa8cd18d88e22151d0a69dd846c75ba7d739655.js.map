{"version":3,"file":"/Users/tittaya/Desktop/lms-2.0/tools/tasks/seed/build.js.prod.ts","sources":["/Users/tittaya/Desktop/lms-2.0/tools/tasks/seed/build.js.prod.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AACrD,qBAAqB,MAAM,CAAC,CAAA;AAE5B,uBAAmB,cAAc,CAAC,CAAA;AAClC,sBAA8C,aAAa,CAAC,CAAA;AAE5D,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAEvC,IAAM,cAAc,GAAG;IACrB,IAAI,EAAE,gBAAM,CAAC,cAAc;IAC3B,gBAAgB,EAAE,IAAI;IACtB,gBAAgB,EAAE,IAAI;CACvB,CAAC;AAMF,iBAAS;IACP,IAAI,SAAS,GAAG,qBAAa,CAAC,EAAE,EAAE,gBAAM,CAAC,cAAc,CAAC,CAAC;IACzD,IAAI,GAAG,GAAG;QACR,gBAAM,CAAC,SAAS,GAAG,2BAA2B;QAC9C,WAAI,CAAC,gBAAM,CAAC,cAAc,EAAE,SAAS,CAAC;QACtC,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,cAAc,EAAE,QAAM,gBAAM,CAAC,6BAA6B,QAAK,CAAC;KACnF,CAAC;IACF,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;SACvB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SACvB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SAC/C,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB,IAAI,CAAC,OAAO,EAAE,UAAS,CAAM;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAGL,MAAM,CAAC,MAAM,CAAC,EAAE;SACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,sBAAc,EAAE,CAAC,CAAC;SACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM,CAAC,cAAc,CAAC,CAAC;SACtC,EAAE,CAAC,OAAO,EAAE,UAAC,CAAM;QAClB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport * as gulpLoadPlugins from 'gulp-load-plugins';\nimport { join } from 'path';\n\nimport Config from '../../config';\nimport { makeTsProject, templateLocals } from '../../utils';\n\nconst plugins = <any>gulpLoadPlugins();\n\nconst INLINE_OPTIONS = {\n  base: Config.TMP_CLIENT_DIR,\n  useRelativePaths: true,\n  removeLineBreaks: true\n};\n\n/**\n * Executes the build process, transpiling the TypeScript files for the production environment.\n */\n\nexport = () => {\n  let tsProject = makeTsProject({}, Config.TMP_CLIENT_DIR);\n  let src = [\n    Config.TOOLS_DIR + '/manual_typings/**/*.d.ts',\n    join(Config.TMP_CLIENT_DIR, '**/*.ts'),\n    '!' + join(Config.TMP_CLIENT_DIR, `**/${Config.BOOTSTRAP_FACTORY_PROD_MODULE}.ts`)\n  ];\n  let result = gulp.src(src)\n    .pipe(plugins.plumber())\n    .pipe(plugins.inlineNg2Template(INLINE_OPTIONS))\n    .pipe(tsProject())\n    .once('error', function(e: any) {\n      this.once('finish', () => process.exit(1));\n    });\n\n\n  return result.js\n    .pipe(plugins.template(templateLocals()))\n    .pipe(gulp.dest(Config.TMP_CLIENT_DIR))\n    .on('error', (e: any) => {\n      console.log(e);\n    });\n};\n"]}