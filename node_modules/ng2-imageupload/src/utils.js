"use strict";
function createImage(url, cb) {
    var image = new Image();
    image.onload = function () {
        cb(image);
    };
    image.src = url;
}
exports.createImage = createImage;
var resizeAreaId = 'imageupload-resize-area';
function getResizeArea() {
    var resizeArea = document.getElementById(resizeAreaId);
    if (!resizeArea) {
        resizeArea = document.createElement('canvas');
        resizeArea.id = resizeAreaId;
        resizeArea.style.visibility = 'hidden';
        resizeArea.style.position = 'absolute';
        resizeArea.style.transform = 'translate(-1000px, 0)';
        document.body.appendChild(resizeArea);
    }
    return resizeArea;
}
function resizeImage(origImage, _a) {
    var _b = _a === void 0 ? {} : _a, resizeMaxHeight = _b.resizeMaxHeight, resizeMaxWidth = _b.resizeMaxWidth, _c = _b.resizeQuality, resizeQuality = _c === void 0 ? 0.7 : _c, _d = _b.resizeType, resizeType = _d === void 0 ? 'image/jpeg' : _d;
    var canvas = getResizeArea();
    var height = origImage.height;
    var width = origImage.width;
    resizeMaxHeight = resizeMaxHeight || resizeMaxWidth;
    resizeMaxWidth = resizeMaxWidth || resizeMaxHeight;
    if (width > height) {
        if (width > resizeMaxWidth) {
            height = Math.round(height *= resizeMaxWidth / width);
            width = resizeMaxWidth;
        }
    }
    else {
        if (height > resizeMaxHeight) {
            width = Math.round(width *= resizeMaxHeight / height);
            height = resizeMaxHeight;
        }
    }
    canvas.width = width;
    canvas.height = height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(origImage, 0, 0, width, height);
    return canvas.toDataURL(resizeType, resizeQuality);
}
exports.resizeImage = resizeImage;
//# sourceMappingURL=utils.js.map